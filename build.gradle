apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'idea'

apply plugin: 'eclipse-wtp'
apply plugin: 'jetty'


configurations {
    warlib
    provided
    querydslapt

}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}


dependencies {
    def springVersion = '4.3.3.RELEASE'
    def springSecurityVersion = '4.2.0.RELEASE'
    def hibernateVersion = '5.1.0.Final'
    def queryDslVersion = '3.7.4'
    def jacksonVersion = '2.8.1'
    def jsonPathVersion = '0.8.1'

    // Logging
    compile "log4j:log4j:1.2.17"

    // MVC
    compile "javax.servlet:jstl:1.2"
    compile "javax.servlet:servlet-api:3.0-alpha-1"

    // Spring
    compile "org.springframework:spring-core:$springVersion"
    compile "org.springframework:spring-web:$springVersion"
    compile "org.springframework:spring-webmvc:$springVersion"
    compile "org.springframework:spring-orm:$springVersion"
    compile "org.springframework:spring-tx:$springVersion"
    compile "org.springframework:spring-aop:$springVersion"
    // DELETE IF SPRING SECURITY WILL WORK compile "org.springframework:spring-context-support:$springVersion"

    // Spring-security
    compile "org.springframework.security:spring-security-core:$springSecurityVersion"
    compile "org.springframework.security:spring-security-web:$springSecurityVersion"
    compile "org.springframework.security:spring-security-config:$springSecurityVersion"
    compile "org.springframework.security:spring-security-taglibs:$springSecurityVersion"

    // File Upload
    provided "javax:javaee-web-api:7.0"
    //compile "commons-fileupload:commons-fileupload:1.3.2"
    compile "commons-io:commons-io:2.5"

    // Database
    compile "postgresql:postgresql:9.4.1208-jdbc42-atlassian-hosted"
    compile "commons-dbcp:commons-dbcp:1.2.2"
    compile "org.hibernate:hibernate-core:$hibernateVersion"
    compile "org.hibernate:hibernate-entitymanager:$hibernateVersion"
    compile "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.0.Final"

    // QueryDsl
    compile "org.springframework.data:spring-data-jpa:1.10.1.RELEASE"
    compile "com.mysema.querydsl:querydsl-core:$queryDslVersion"
    compile "com.mysema.querydsl:querydsl-jpa:$queryDslVersion"
    compile "com.mysema.querydsl:querydsl-apt:$queryDslVersion"
    compile "com.mysema.commons:mysema-commons-lang:0.2.4"

    // Cache
    compile "net.sf.ehcache:ehcache-core:2.4.3"
    compile "org.springframework:spring-context:$springVersion"
    compile "org.springframework:spring-context-support:$springVersion"

    // Json
    compile "org.apache.geronimo.specs:geronimo-servlet_3.0_spec:1.0"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:$jacksonVersion"


    // Test
    testCompile "junit:junit:4.11"
    testCompile "org.testng:testng:6.9.10"
    testCompile "org.springframework:spring-test:$springVersion"
    testCompile "org.mockito:mockito-all:1.10.19"

    // Http methods test
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "com.jayway.jsonpath:json-path:$jsonPathVersion"
    testCompile "com.jayway.jsonpath:json-path-assert:$jsonPathVersion"

    // Other
    compile "org.apache.commons:commons-lang3:3.4"
    compile "org.apache.commons:commons-io:1.3.2"
    compile "commons-beanutils:commons-beanutils:1.8.3"
    compile "org.projectlombok:lombok:1.16.6"

}

// Генерация классов QueryDsl
ext {
    generatedSourcesDir = file("generated")
    querydslVersion = "3.7.4"
}

sourceSets {
    main {
        java {
            srcDir "src/generated"
            srcDir generatedSourcesDir
        }
    }
}
configurations {
    querydslapt
}
task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.querydslapt
    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.mysema.query.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = generatedSourcesDir
}
compileJava {
    doFirst {
        generatedSourcesDir.mkdirs();
    }
    options.compilerArgs += ['-s', generatedSourcesDir]

    dependsOn generateQueryDSL
}

// Embeded Jetty for testing
jettyRun {
    contextPath = "serviceiii"
    httpPort = 8080
}

jettyRunWar {
    contextPath = "serviceiii"
    httpPort = 8080
}

